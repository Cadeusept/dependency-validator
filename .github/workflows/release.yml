name: Build and Release

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'  # triggers on version tags like v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64  # unsupported combos

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Go 1.24.1
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.1

      - name: Build and create tar.gz archive
        run: |
          mkdir -p dist
          output_name="dependency-validator-${{ matrix.goos }}-${{ matrix.goarch }}"
          binary_name="$output_name"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            binary_name="${binary_name}.exe"
          fi

          # Build the binary
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o "$binary_name" ./cmd/main.go
          
          # Create tar.gz archive
          tar -czf "dist/${output_name}.tar.gz" "$binary_name"
          
          # Clean up
          rm "$binary_name"

      - name: Generate checksums
        run: |
          cd dist
          for f in *.tar.gz; do
            sha256sum "$f" > "$f.sha256"
          done

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: "release-${{ matrix.goos }}-${{ matrix.goarch }}"
          path: dist/*.tar.gz
          if-no-files-found: warn

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: dist/**/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}